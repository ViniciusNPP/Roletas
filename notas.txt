OPERADORES TERNÁRIOS:

1- "? :"
        1.1- O QUE FAZ:
                Substitui o if e else

        1.2- COMO USAR
                condição ? valor_se_verdadeiro : valor_se_falso;

        1.3- EXEMPLO:
                let idade = 18;
                let podeEntrar = idade >= 18 ? "Sim" : "Não";
                console.log(podeEntrar); // Saída: "Sim"

2- "??="
        2.1- O QUE FAZ:
                Atribui valor a uma variável se ela for null ou undefined

        2.2- COMO USAR
                variável ??= valor

        2.3- EXEMPLO:
                let idade;
                let nome = null;

                idade ??= 18;
                nome ??= "Gabriel";

                console.log("idade: ", idade, "nome: ", nome); Saída: "idade: 18 nome: Gabriel"

3- "||="
        3.1- O QUE FAZ:
                Atribui se o valor for "falsy" (false, 0, "", null, undefined, NaN)

        3.2- COMO USAR
                variável ??= valor

        3.3- EXEMPLO:
                let idade = 0;
                let nome = "";

                idade ||= 18;
                nome ||= "Gabriel";

                console.log("idade: ", idade, "nome: ", nome); Saída: "idade: 18 nome: Gabriel"

4- "&&="
        4.1- O QUE FAZ:
                Atribui se o valor for "truthy"

        4.2- COMO USAR
                variável &&= valor

        4.3- EXEMPLO:
                let idade = 0;
                let nome = "Rodrigo";

                idade &&= 18;
                nome &&= "Gabriel";

                console.log("idade: ", idade, "nome: ", nome); Saída: "idade: 0 nome: Gabriel"
            

FUNÇÕES:

1- find()
        1.1- O QUE FAZ:
                Funciona como um foreach que contém uma condição para parar e atribuir a variável

        1.2- COMO USAR:
                var1 = var2.find(var3 => condição)

        1.3- EXEMPLO:

2- querySelector
        2.1- O QUE FAZ:
                Busca "de cima para baixo" no DOM ou em um elemento específico.
        
        2.2- COMO USAR:
                elemento_ou_DOOM.querySelector('nome');
                OBS: O nome pode ser: tag ('nome'), id ('#nome') ou class ('.nome')

        2.3- EXEMPLO:
                container.querySelector('.botaoGirar');

3- closest()
        3.1- O QUE FAZ:
                Busca um elemento específico "de baixo para cima" a partir do elemento onde você chamou ele.
        
        3.2- COMO USAR:
                elemento.closest('nome')
                OBS: O nome pode ser: tag ('nome'), id ('#nome') ou class ('.nome')
        
        3.3- EXEMPLO:
                botaoGirar.closest('.container');


JSON: